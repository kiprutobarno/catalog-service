name: Commit Stage
on: push

env:
  REGISTRY: ghrc.io
  USERNAME: kiprutobarno
  IMAGE_NAME: catalog-service
  VERSION: latest

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Code vulnerability scanning
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "${{ github.workspace }}"
          fail-build: false
          severity-cutoff: high
          acs-report-enable: true
      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Build, unit tests and integration tests
        run: mvn -DskipTests -B --update-snapshots verify
  # package:
  #   name: Package and Publish
  #   if: ${{github.ref=='refs/heads/main'}}
  #   needs: [build]
  #   runs-on: ubuntu-22.04
  #   permissions:
  #     contents: read
  #     packages: write
  #     security-events: write
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4
  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 21
  #         cache: maven
  #     - name: Build container image
  #       run: mvn spring-boot:build-image -DskipTests
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ env.USERNAME }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Publish container image
  #       run: |
  #         docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
  #         docker push ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # security-events: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven
      - name: Build container image
        # run: mvn spring-boot:build-image -DskipTests
        run: |
          chmod +x mvnw
          ./mvnw spring-boot:build-image -DskipTests
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish container image
        # run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
        run: |
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ${{ env.REGISTRY }}/${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  # publish:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-java@v3
  #       with:
  #         java-version: "21"
  #         distribution: "temurin"
  #     - name: Publish package
  #       run: mvn --batch-mode deploy
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
